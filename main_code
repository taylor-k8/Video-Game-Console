// ===================================================
//               DEFINE VARIABLES
// ===================================================

#include <TFT_eSPI.h>       //LCD screen
#include <LiquidCrystal.h>  //Pixel screen

//create the screen variable from the library
TFT_eSPI tft = TFT_eSPI();

// Set up variables for the cursor and counter. Cursor starts in the middle of the screen.
float cursorX = 240.0;
float cursorY = 160.0;
int resetCount = 0;

// Setting the joystick pins here so we can easily change them
#define JOYSTICK_X_PIN A7
#define JOYSTICK_Y_PIN A6
#define JOYSTICK_BUTTON_PIN 34

// Define colours in 4-digit hex                                  
#define BLACK 0x0000
#define BLUE 0x001F
#define RED 0xF800
#define GREEN 0x07E0
#define CYAN 0x07FF
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF

// ===================================================
//               SETUP
// ===================================================

//void setup() {

  // Initalize the screen and set the orientation correctly, then make sure it's clear.
  //tft.begin();
  //tft.setRotation(1);          //This give horizontal orientation
  //tft.fillScreen(BLACK);       //Make background be black

  // Set the cursor to the top left of the screen and print some text.
  //tft.setCursor(0, 0);
  //tft.setTextColor(WHITE);
  //tft.setTextSize(2);
  //tft.println("Welcome to our game!");

  // Tell the arduino that the joystick button is on pin 9 and write it high so it gets set to 0 when pushed.
  //pinMode(JOYSTICK_BUTTON_PIN, INPUT);
  //digitalWrite(JOYSTICK_BUTTON_PIN, HIGH);
//}


// ===================================================
//               HOMESCREEN
// ===================================================

unsigned long lastFrame = millis();
 
void loop() {
 
// limit frame rate
while((millis() - lastFrame) &lt; 20);
lastFrame = millis();
 
switch(gameState){
case 1: // start
gameState = 11;
break;
 
case 11: // click to play
tft.fillRect((tftWidth/2)-100,(tftHeight/2)-20,200,40,ILI9341_GREEN);
tft.setCursor((tftWidth/2)-100+25,(tftHeight/2)-20+12);
tft.setTextSize(2);
tft.setTextColor(ILI9341_WHITE);
tft.print("CLICK TO PLAY");
gameState = 12;
break;
 
case 12: // wait for click to play
if (ts.touched()) {
TS_Point p = ts.getPoint();
ScreenPoint sp = getScreenCoords(p.x, p.y);
if (checkCollision(sp.x, sp.y,1,1,(tftWidth/2)-50,(tftHeight/2)-20,100,40)){
initGame();
gameState = 2;
}
}
break;
 
case 2: // play
 
moveBall();
moveBat();
checkHitBat();
checkHitBlock();
if (checkBallLost()){
playerLives --;
drawLives();
if (playerLives &gt; 0){
newBall();
}
else {
gameState = 3; // end game
}
}
